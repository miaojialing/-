<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls"
    xmlns:internalCommands="clr-namespace:MaterialDesignExtensions.Commands.Internal"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignOverSizedNumberSpinnerButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    </Style>

    <Style
        x:Key="MaterialDesignOverSizedNumberSpinnerPlusButton"
        BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5,5,0,0">
                        <wpf:Ripple
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Top"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Feedback="White"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MaterialDesignOverSizedNumberSpinnerMinusButton"
        BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0,0,5,5">
                        <wpf:Ripple
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Bottom"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Feedback="White"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignOverSizedNumberSpinnerValueButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:OversizedNumberSpinner}">
        <Setter Property="Height" Value="70" />
        <Setter Property="Width" Value="55" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OversizedNumberSpinner}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="PlusAnimation">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ValueTextBlock" Storyboard.TargetProperty="FontSize">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="26" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MinusAnimation">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ValueTextBlock" Storyboard.TargetProperty="FontSize">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="14" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="False">
                                        <Setter Property="Opacity" Value="0.75" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="True">
                                        <Setter Property="Opacity" Value="1" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="25*" />
                            <RowDefinition Height="25*" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="2"
                            Height="1"
                            HorizontalAlignment="Stretch"
                            Background="{DynamicResource MaterialDesignSeperator}"
                            SnapsToDevicePixels="True" />
                        <Button
                            Grid.RowSpan="2"
                            Background="{TemplateBinding Background}"
                            Command="{x:Static internalCommands:OversizedNumberSpinnerCommands.PlusCommand}"
                            Style="{StaticResource MaterialDesignOverSizedNumberSpinnerPlusButton}">
                            <wpf:PackIcon
                                Width="30"
                                Height="30"
                                Foreground="{TemplateBinding Foreground}"
                                Kind="ChevronUp" />
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource PlusAnimation}" />
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button
                            x:Name="PlusButton"
                            Grid.Row="3"
                            Grid.RowSpan="2"
                            Background="{TemplateBinding Background}"
                            Command="{x:Static internalCommands:OversizedNumberSpinnerCommands.MinusCommand}"
                            Style="{StaticResource MaterialDesignOverSizedNumberSpinnerMinusButton}">
                            <wpf:PackIcon
                                Width="30"
                                Height="30"
                                Foreground="{TemplateBinding Foreground}"
                                Kind="ChevronDown" />
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard Storyboard="{StaticResource MinusAnimation}" />
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Command="{x:Static internalCommands:OversizedNumberSpinnerCommands.EditValueCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignOverSizedNumberSpinnerValueButton}" TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="False">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <TextBlock
                                x:Name="ValueTextBlock"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="20"
                                Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" />
                        </Button>
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Margin="4,0,4,0"
                            Padding="4,2,4,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="White"
                            CornerRadius="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEditing}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBox
                                x:Name="ValueTextBox"
                                MinWidth="10"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Foreground="Black"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>