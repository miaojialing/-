<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MaterialBusyOverlayCircular" TargetType="{x:Type controls:BusyOverlay}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ProgressBar
                        Width="48"
                        Height="48"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}"
                        IsIndeterminate="{Binding Path=IsBusy, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}"
                        Style="{StaticResource MaterialDesignCircularProgressBar}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BusyOverlay}">
                    <Grid
                        x:Name="BaseGrid"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            Opacity="0.9" />
                        <ContentControl
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BaseGrid"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BaseGrid"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="Panel.ZIndex" Value="-8192" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Panel.ZIndex" Value="8192" />
            </DataTrigger>
            <Trigger Property="IsBusy" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MaterialBusyOverlayCircularProgress"
        BasedOn="{StaticResource MaterialBusyOverlayCircular}"
        TargetType="{x:Type controls:BusyOverlay}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <ProgressBar
                            Width="128"
                            Height="128"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}"
                            IsIndeterminate="False"
                            Style="{StaticResource MaterialDesignCircularProgressBar}"
                            Value="{Binding Path=Progress, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="32"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}"
                            Text="{Binding Path=Progress, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}, StringFormat={}{0}%}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MaterialBusyOverlayLinear"
        BasedOn="{StaticResource MaterialBusyOverlayCircular}"
        TargetType="{x:Type controls:BusyOverlay}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ProgressBar
                        Height="8"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}"
                        IsIndeterminate="True"
                        Style="{StaticResource MaterialDesignLinearProgressBar}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MaterialBusyOverlayLinearProgress"
        BasedOn="{StaticResource MaterialBusyOverlayCircular}"
        TargetType="{x:Type controls:BusyOverlay}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Orientation="Vertical">
                        <ProgressBar
                            Height="8"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}"
                            IsIndeterminate="False"
                            Style="{StaticResource MaterialDesignLinearProgressBar}"
                            Value="{Binding Path=Progress, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}" />
                        <TextBlock
                            Margin="0,16,0,0"
                            HorizontalAlignment="Center"
                            FontSize="32"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}}"
                            Text="{Binding Path=Progress, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:BusyOverlay}}, StringFormat={}{0}%}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MaterialBusyOverlayCircular}" TargetType="{x:Type controls:BusyOverlay}" />

</ResourceDictionary>