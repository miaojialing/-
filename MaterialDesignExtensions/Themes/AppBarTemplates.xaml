<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls"
    xmlns:converters="clr-namespace:MaterialDesignExtensions.Converters"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" FalseValue="Collapsed" />
    <converters:NotNullToVisibilityConverter x:Key="notNullToVisibilityConverter" NullValue="Collapsed" />
    <converters:ObjectCollectionToVisibilityConverter x:Key="objectCollectionToVisibilityConverter" EmptyValue="Collapsed" />

    <Style x:Key="MaterialDesignAppBar" TargetType="{x:Type controls:AppBar}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Type" Value="Default" />
        <Setter Property="OpaqueMode" Value="Opaque" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AppBar}">
                    <Grid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        TextBlock.Foreground="{TemplateBinding Foreground}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="100*" />
                        </Grid.RowDefinitions>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=OpaqueMode, RelativeSource={RelativeSource TemplatedParent}}" Value="Opaque">
                                        <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(md:ShadowAssist.ShadowDepth), Converter={x:Static md:ShadowConverter.Instance}}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=OpaqueMode, RelativeSource={RelativeSource TemplatedParent}}" Value="Transparent">
                                        <Setter Property="Background" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Default">
                                            <Setter Property="Height" Value="64" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Prominent">
                                            <Setter Property="Height" Value="64" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="ExtraProminent">
                                            <Setter Property="Height" Value="64" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Dense">
                                            <Setter Property="Height" Value="48" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="DenseProminent">
                                            <Setter Property="Height" Value="48" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="DenseExtraProminent">
                                            <Setter Property="Height" Value="48" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="Medium">
                                            <Setter Property="Height" Value="56" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="MediumProminent">
                                            <Setter Property="Height" Value="56" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource TemplatedParent}}" Value="MediumExtraProminent">
                                            <Setter Property="Height" Value="56" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="100*" />
                                </Grid.ColumnDefinitions>

                                <!--  toggle button for the navigation drawer  -->
                                <ToggleButton
                                    Grid.Column="0"
                                    Width="24"
                                    Height="24"
                                    Margin="18,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Cursor="Hand"
                                    IsChecked="{Binding Path=IsNavigationDrawerOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource MaterialDesignHamburgerToggleButton}"
                                    Visibility="{TemplateBinding ShowNavigationDrawerButton,
                                                                 Converter={StaticResource boolToVisibilityConverter}}" />

                                <!--  app icon  -->
                                <ContentControl
                                    Grid.Column="0"
                                    Width="28"
                                    Height="28"
                                    Margin="18,0,0,0"
                                    VerticalAlignment="Center"
                                    Content="{Binding Path=AppIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding AppIcon,
                                                                 Converter={StaticResource notNullToVisibilityConverter}}">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type BitmapImage}">
                                            <Image
                                                Width="28"
                                                Height="28"
                                                VerticalAlignment="Center"
                                                Source="{Binding}" />
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>

                                <!--  back button  -->
                                <Button
                                    x:Name="backButton"
                                    Grid.Column="0"
                                    Margin="18,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    md:RippleAssist.Feedback="{TemplateBinding Foreground}"
                                    Cursor="Hand"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource MaterialDesignToolForegroundButton}"
                                    Visibility="{TemplateBinding ShowBackButton,
                                                                 Converter={StaticResource boolToVisibilityConverter}}">
                                    <md:PackIcon
                                        Width="24"
                                        Height="24"
                                        Kind="ArrowLeft" />
                                </Button>

                                <!--  title  -->
                                <ContentControl
                                    Grid.Column="1"
                                    Margin="0,0,16,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Title}"
                                    Focusable="False"
                                    TextBlock.FontSize="20">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type system:String}">
                                            <TextBlock
                                                FontSize="20"
                                                SnapsToDevicePixels="True"
                                                Text="{Binding}" />
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ShowTitleInProminentArea, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=ShowTitleInProminentArea, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>

                                <!--  content area  -->
                                <ContentControl
                                    Grid.Column="2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{Binding Path=ContentAreaContent, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{Binding Path=ContentAreaContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                        <Border
                            Grid.Row="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Focusable="False">
                            <ContentControl
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                Margin="80,0,16,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Title}"
                                Focusable="False"
                                TextBlock.FontSize="20">
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type system:String}">
                                        <TextBlock
                                            FontSize="20"
                                            SnapsToDevicePixels="True"
                                            Text="{Binding}" />
                                    </DataTemplate>
                                </ContentControl.Resources>
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ShowTitleInProminentArea, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ShowTitleInProminentArea, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ShowShadow, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="Default">
                <Setter Property="Height" Value="{x:Static controls:AppBar.DefaultHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="Prominent">
                <Setter Property="Height" Value="{x:Static controls:AppBar.ProminentHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="ExtraProminent">
                <Setter Property="Height" Value="{x:Static controls:AppBar.ExtraProminentHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="Dense">
                <Setter Property="Height" Value="{x:Static controls:AppBar.DenseHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="DenseProminent">
                <Setter Property="Height" Value="{x:Static controls:AppBar.DenseProminentHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="DenseExtraProminent">
                <Setter Property="Height" Value="{x:Static controls:AppBar.DenseExtraProminentHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="Medium">
                <Setter Property="Height" Value="{x:Static controls:AppBar.MediumHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="MediumProminent">
                <Setter Property="Height" Value="{x:Static controls:AppBar.MediumProminentHeight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Type, RelativeSource={RelativeSource Self}}" Value="MediumExtraProminent">
                <Setter Property="Height" Value="{x:Static controls:AppBar.MediumExtraProminentHeight}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="MaterialDesignAppBarDense"
        BasedOn="{StaticResource MaterialDesignAppBar}"
        TargetType="{x:Type controls:AppBar}">
        <Setter Property="Type" Value="Dense" />
    </Style>

    <Style
        x:Key="MaterialDesignAppBarProminent"
        BasedOn="{StaticResource MaterialDesignAppBar}"
        TargetType="{x:Type controls:AppBar}">
        <Setter Property="Type" Value="Prominent" />
    </Style>

    <Style
        x:Key="MaterialDesignAppBarDenseProminent"
        BasedOn="{StaticResource MaterialDesignAppBar}"
        TargetType="{x:Type controls:AppBar}">
        <Setter Property="Type" Value="DenseProminent" />
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignAppBar}" TargetType="{x:Type controls:AppBar}" />

</ResourceDictionary>